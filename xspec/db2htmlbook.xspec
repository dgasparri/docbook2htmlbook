<?xml version="1.0" encoding="UTF-8"?>
<x:description xmlns:h="http://www.w3.org/1999/xhtml" xmlns:x="http://www.jenitennison.com/xslt/xspec" stylesheet="../db2htmlbook.xsl">
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match '*">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'book">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing function process-child-content">
        <x:call template="process-child-content"></x:call>
        <x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'part">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'partintro">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'chapter | preface | appendix | colophon | dedication">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'prefaceinfo | chapterinfo">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'jobtitle">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'footnote">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'footnoteref">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'para | simpara">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'formalpara">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'sect1">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'sect2">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'sect3">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'sect4">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'sect5">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'sidebar">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'note | tip | warning | caution | important">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'blockquote | epigraph | quote">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'attribution">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'title">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'inlineequation">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'equation | informalequation">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'mathphrase">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <!-- GLOSSARY SCENARIOS BEGIN -->
    <x:scenario label="When glossary tag only has title before glossary terms">
        <x:context><glossary id="glossary">
            <title>...</title>
        </glossary>
        </x:context>
        
        <x:expect label="it turns into section tag with h1'">
            <h:section id="glossary" data-type="glossary">
                <h:h1>...</h:h1>
            <h:dl data-type="glossary"/>

        </h:section>
        </x:expect>
    </x:scenario>
    
    <x:scenario label="When glossary tag only has more elements preceding glossary terms">
        <x:context><glossary id="glossary">
            <title>...</title>
            <para>Here's a para!</para>
            <programlisting>...</programlisting>
            
        </glossary>
        </x:context>
        
        <x:expect label="convert those tags to htmlbook too'">
            <h:section id="glossary" data-type="glossary"><h:h1>...</h:h1>
            <h:p>Here's a para!</h:p>
            <h:pre data-type="programlisting">...</h:pre>
            <h:dl data-type="glossary"/>
            
        </h:section>
        </x:expect>
    </x:scenario>
    
    <x:scenario label="When there is a glossdiv">
        <x:context><glossdiv>
            <para>...</para>
        </glossdiv></x:context>
        
        <x:expect label="drop the glossdiv tags and continue processing from there."><h:p>...</h:p></x:expect>

    </x:scenario>
    
    <x:scenario label="When there is a glossdiv with a glossentry inside of it">
        <x:context><glossdiv>
            <para>...</para>
            <glossentry/>
        </glossdiv></x:context>
        
        <x:expect label="the glossentry is also processed.">
            <h:p>...</h:p>
            <h:dt data-type="glossterm"/>
            <h:dd data-type="glossdef"/>
        </x:expect>
        
    </x:scenario>
    
    <x:scenario label="When there is a glossentry">
        <x:context>

            <glossentry id="glossary_Ansible">
                <glossterm>...</glossterm>
                
            </glossentry>

        </x:context>
        
        <x:expect label="create dt and dd elements, progegating the glossentry's id onto the dt">
            <h:dt data-type="glossterm" id="glossary_Ansible"><h:dfn>...</h:dfn></h:dt>
        <h:dd data-type="glossdef">...</h:dd>
        </x:expect>
    </x:scenario>
    
    <x:scenario label="When there is a glossterm">
        <x:context>
                <glossterm>API</glossterm>
        </x:context>
        
        <x:expect label="it turns into a dt with a dfn tag wrapping the text">
            <h:dfn>API</h:dfn>
        </x:expect>
    </x:scenario>
    
    <x:scenario label="When there is a glossterm with inline markup">
        <x:context>
            <glossterm><literal>API</literal></glossterm>
        </x:context>
        
        <x:expect label="it turns into a dt with a dfn tag wrapping the text, with inline tags present">
            <h:dfn><h:code>API</h:code></h:dfn>
        </x:expect>
    </x:scenario>
    
    <x:scenario  label="When there is a glossdef with no other glossary tags inside of it">
        <x:context>
            <glossdef><para>...</para></glossdef>
        </x:context>
        
        <x:expect label="process those tags" ><h:p>...</h:p></x:expect>
    </x:scenario>
    
    <x:scenario  label="When there is a glossdef with glossseealso and glosssee in it">
        <x:context>
            <glossdef>
                <para>Hello. How are you?</para>
                <glosssee otherterm="glossary_XML1"/>
                <glossseealso otherterm="glossary_XML2"/>
                
            </glossdef>
        </x:context>
        
        <x:expect label="process all the tags inside of the glossdef" >
            <h:p>Hello. How are you?</h:p>
            <h:p class="glosssee">See <h:a href="#glossary_XML1"/></h:p>
            <h:p class="glossseealso">See <h:a href="#glossary_XML2"/></h:p>
        </x:expect>
    </x:scenario>
    
    
    <x:scenario label="When there is a glosssee">
        <x:context>
            <glosssee otherterm="glossary_XML"/>
            
            <glossentry id="glossary_XML">
                <glossterm>XML</glossterm>
            </glossentry>
        </x:context>
        
        <x:expect label="it turns into a p with a link to the referenced term, with gen text the same as the referenced glossterm.">
            
            <h:p class="glosssee">See <h:a href="#glossary_XML">XML</h:a></h:p>
            
            <h:dt data-type="glossterm" id="glossary_XML"><h:dfn>XML</h:dfn></h:dt>
            <h:dd data-type="glossdef">...</h:dd>
        </x:expect>
        
    </x:scenario>
    
    <x:scenario label="When there is a glossseealso">
        <x:context>
            <glossseealso otherterm="glossary_PERL"/>
            
            <glossentry id="glossary_PERL">
                <glossterm>PERL</glossterm>
            </glossentry>
        </x:context>
        <x:expect label="it turns into a p with a link to the referenced term, with gen text the same as the referenced glossterm.">
            <h:p class="glossseealso">See <h:a href="#glossary_PERL">PERL</h:a></h:p>
            <h:dt data-type="glossterm" id="glossary_PERL"><h:dfn>PERL</h:dfn></h:dt>
            <h:dd data-type="glossdef"/>
        </x:expect>
        
    </x:scenario>
    
    <x:scenario label="When there is a full fledged, yet short, glossary">
        <x:context>
            <glossary>
                <title>Chris's Glossary</title>
                <para>This is an introductory paragraph!</para>
                <glossdiv>
                    <glossentry id="glossary_API_short">
                        <glossterm>API</glossterm>
                        
                        <glosssee otherterm="glossary_API"/>
                    </glossentry>
                    
                    <glossentry id="glossary_API">
                        <glossterm>Application Programming Interface</glossterm>
                        
                        <glossdef>
                            <para>Some text. Some inline <literal>RPCs</literal> text.</para>
                            
                            <glossseealso otherterm="glossary_API_short"/>
                        </glossdef>
                    </glossentry>
                </glossdiv>
            </glossary>
        </x:context>
        <x:expect label="pray everything works correctly.">
            <h:section data-type="glossary">
                <h:h1>Chris's Glossary</h:h1>
                <h:p>This is an introductory paragraph!</h:p>
                <h:dl data-type="glossary">
                    <h:dt data-type="glossterm" id="glossary_API_short"><h:dfn>API</h:dfn></h:dt>
                    <h:dd data-type="glossdef"><h:p class="glosssee">See <h:a href="#glossary_API">Application Programming Interface</h:a></h:p></h:dd>
                    
                    <h:dt data-type="glossterm" id="glossary_API"><h:dfn>Application Programming Interface</h:dfn></h:dt>
                    <h:dd data-type="glossdef">
                        <h:p>Some text. Some inline <h:code>RPCs</h:code> text.</h:p>
                        
                        <h:p class="glossseealso">See <h:a href="#glossary_API_short">API</h:a></h:p>
                    </h:dd>
                </h:dl>
                
            </h:section>
        </x:expect>
        
    </x:scenario>
    
    
    
    <!-- GLOSSARY SCENARIOS END -->
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'itemizedlist">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'orderedlist">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'variablelist">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'simplelist">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'procedure">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'substeps">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'programlisting | screen">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'literallayout">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'example">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'figure">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'informalfigure">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing function fig-attrs">
        <x:call template="fig-attrs"></x:call>
        <x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'inlinemediaobject">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'table | informaltable">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'tgroup">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'caption">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'thead">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'tbody">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'row">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'tr">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'th">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'td">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'entry">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>

    <!-- BEGIN namest and nameend attribute tests -->

    <!-- in thead -->
    <x:scenario label="When attributes namest and nameend in a thead are on entries with no block children">
        <x:context>
            <tgroup cols="6">
                <colspec colname="my_column" colnum="1"/>
                <colspec colname="frenchfries" colnum="2"/>
                <colspec colname="rainbow" colnum="3"/>
                <colspec colname="baseball" colnum="4"/>
                <colspec colname="sigfried" colnum="5"/>
                <colspec colname="seto_kaiba" colnum="6"/>
                <thead>
                  <row>
                    <entry nameend="frenchfries" namest="my_column">Regular expression</entry>
                    <entry>Meaning</entry>
                  </row>
                <row>
                    <entry>PlainA second paragraph in the entry</entry>
                    <entry nameend="sigfried" namest="rainbow">Extended</entry>
                  </row>
                </thead>
            </tgroup>
        </x:context>

        <x:expect label="they propegate to colspan attribute on the th (with values of 2 and 3 in this case)">
        <h:thead>
        <h:tr>
                <h:th colspan="2">Regular expression</h:th>
                <h:th>Meaning</h:th>
        </h:tr>
        <h:tr>
                <h:th>PlainA second paragraph in the entry</h:th>
                <h:th colspan="3">Extended</h:th>
        </h:tr>
        </h:thead>
        </x:expect>


    </x:scenario>

    <x:scenario label="When attributes namest and nameend in a thead are on entries with block children">
    <x:context>
        <tgroup cols="6">
            <colspec colname="my_column" colnum="1"/>
            <colspec colname="frenchfries" colnum="2"/>
            <colspec colname="rainbow" colnum="3"/>
            <colspec colname="baseball" colnum="4"/>
            <colspec colname="sigfried" colnum="5"/>
            <colspec colname="seto_kaiba" colnum="6"/>
            <thead>
              <row>
                <entry nameend="frenchfries" namest="my_column"><para>Regular expression</para></entry>
                <entry><para>Meaning</para></entry>
              </row>

               <row>
                <entry><para>Meaning</para></entry>
                <entry nameend="rainbow" namest="frenchfries"><para>Regular expression</para></entry>
               </row>

            </thead>
        </tgroup>
        </x:context>

        <x:expect label="they propegate to colspan attribute on the th (with values of 2 and 2 in this case)">
        <h:thead>
        <h:tr>
                <h:th colspan="2">...</h:th>
                <h:th>...</h:th>
        </h:tr>
        <h:tr>
                <h:th>...</h:th>
                <h:th colspan="2">...</h:th>
        </h:tr>
        </h:thead>
        </x:expect>

    </x:scenario>
    
    <!-- in tbody-->

        <x:scenario label="When attributes namest and nameend in a tbody are on entries with no block children">
    <x:context>
        <tgroup cols="6">
            <colspec colname="my_column" colnum="1"/>
            <colspec colname="frenchfries" colnum="2"/>
            <colspec colname="rainbow" colnum="3"/>
            <colspec colname="baseball" colnum="4"/>
            <colspec colname="sigfried" colnum="5"/>
            <colspec colname="seto_kaiba" colnum="6"/>
            <tbody>
              <row>
                <entry nameend="rainbow" namest="frenchfries">Regular expression</entry>
                <entry>Meaning</entry>
              </row>
            <row>
                <entry>PlainA second paragraph in the entry</entry>
                <entry nameend="seto_kaiba" namest="rainbow">Extended</entry>
              </row>
            </tbody>
        </tgroup>
        </x:context>

        <x:expect label="they propegate to colspan attribute on the td (with values of 2 and 4 in this case)">
        <h:tbody>
        <h:tr>
                <h:td colspan="2">Regular expression</h:td>
                <h:td>Meaning</h:td>
        </h:tr>
        <h:tr>
                <h:td>PlainA second paragraph in the entry</h:td>
                <h:td colspan="4">Extended</h:td>
        </h:tr>
        </h:tbody>
        </x:expect>


    </x:scenario>

    <x:scenario label="When attributes namest and nameend in a thead are on entries with block children">
    <x:context>
        <tgroup cols="6">
            <colspec colname="my_column" colnum="1"/>
            <colspec colname="frenchfries" colnum="2"/>
            <colspec colname="rainbow" colnum="3"/>
            <colspec colname="baseball" colnum="4"/>
            <colspec colname="sigfried" colnum="5"/>
            <colspec colname="seto_kaiba" colnum="6"/>
            <tbody>
              <row>
                <entry nameend="seto_kaiba" namest="my_column"><para>Regular expression</para></entry>
                <entry><para>Meaning</para></entry>
              </row>

               <row>
                <entry><para>Meaning</para></entry>
                <entry nameend="rainbow" namest="my_column"><para>Regular expression</para></entry>
               </row>

            </tbody>
        </tgroup>
        </x:context>

        <x:expect label="they propegate to colspan attribute on the td (with values of 6 and 3 in this case)">
        <h:tbody>
        <h:tr>
                <h:td colspan="6">...</h:td>
                <h:td>...</h:td>
        </h:tr>
        <h:tr>
                <h:td>...</h:td>
                <h:td colspan="3">...</h:td>
        </h:tr>
        </h:tbody>
        </x:expect>

    </x:scenario>

    
    <!-- END namest and nameend attribute tests -->

    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'colspec">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'col">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'index">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'indexterm">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'remark">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'co">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'calloutlist">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'literal | code">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'emphasis">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'emphasis[@role='strong']">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'emphasis[@role='bold']">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'superscript">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'subscript">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'replaceable">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'userinput">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'firstterm">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'filename">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'citetitle">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'acronym">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'command">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'application">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'computeroutput">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'parameter">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'function">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'varname">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'option">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'prompt">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'systemitem">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'uri">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'interfacename">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'optional">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'processing-instruction()">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'processing-instruction('lb')">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'phrase[@role]">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'phrase[not(@role)]">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'guimenu">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'guisubmenu">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'guibutton">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'guilabel">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'guiicon">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'guimenuitem">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'keycombo">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'keycap[parent::keycombo]">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'keycap[not(parent::keycombo)]">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'symbol">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'emphasis[@role='strikethrough'] | phrase[@role='strikethrough']">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'lineannotation">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario label="Ulink tests">
        <x:context/>
        
        <x:scenario label="When a ulink has a text node">
            <x:context>
                <ulink url="http://oreilly.com">O'Reilly Media</ulink>
            </x:context>
            <x:expect label="An &lt;a&gt; element should be created, with @url propagated to @href and text node preserved">
                <h:a href="http://oreilly.com">O'Reilly Media</h:a>  
            </x:expect>
        </x:scenario>
        
        <x:scenario label="When a ulink has no text node">
            <x:context>
                <ulink url="http://oreilly.com"/>
            </x:context>
            <x:expect label="An &lt;a&gt; element should be created with a nested &lt;em&gt;, with @url propagated to @href and text node duplicating @url">
                <h:a href="http://oreilly.com">
                    <h:em class="hyperlink">http://oreilly.com</h:em>
                </h:a>  
            </x:expect>
        </x:scenario>
        
        <x:scenario label="When a ulink has a @role (no text node)">
            <x:context>
                <ulink role="hideurl" url="http://oreilly.com"/>
            </x:context>
            <x:expect label="It should be propagated to a @class attribute">
                <h:a href="http://oreilly.com" class="hideurl">
                    <h:em class="hyperlink">http://oreilly.com</h:em>
                </h:a>  
            </x:expect>
        </x:scenario>
        
        <x:scenario label="When a ulink has a @role (text node)">
            <x:context>
                <ulink role="showurl" url="http://oreilly.com">O'Reilly Media</ulink>
            </x:context>
            <x:expect label="It should be propagated to a @class attribute">
                <h:a href="http://oreilly.com" class="showurl">O'Reilly Media</h:a>  
            </x:expect>
        </x:scenario>
        
        <x:scenario label="When a ulink has inline tagging">
            <x:context>
                <ulink url="http://oreilly.com"><emphasis>O'Reilly Media</emphasis></ulink>
            </x:context>
            <x:expect label="It should be transformed as expected">
                <h:a href="http://oreilly.com"><h:em>O'Reilly Media</h:em></h:a>  
            </x:expect>
        </x:scenario>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'email">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'xref | link">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing function meta">
        <x:call template="meta"></x:call>
        <x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing function titlepage">
        <x:call template="titlepage"></x:call>
        <x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing function copyrightpage">
        <x:call template="copyrightpage"></x:call>
        <x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing function process-id">
        <x:call template="process-id"></x:call>
        <x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing function process-role">
        <x:call template="process-role"></x:call>
        <x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'bookinfo">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
    
    <x:scenario pending="Not yet implemented" label="Scenario for testing template with match 'refentry">
        <x:context></x:context><x:expect label="Not yet implemented"  select="'Not yet implemented'"/>
    </x:scenario>
</x:description>